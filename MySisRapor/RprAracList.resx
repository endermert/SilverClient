<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="dsAracList.SelectCommand" xml:space="preserve">
    <value>SELECT        ATS_ARACLAR.ARC_SER1NO, ATS_ARACLAR.ARC_PLAKA, ATS_ARACLAR.ARC_SAH1B1, ATS_ARACLAR.ARC_MARKA, ATS_ARACLAR.ARC_MODEL, 
                         ATS_ARACLAR.ARC_RENK, ATS_ARACLAR.ARC_C1NS, ATS_ARACLAR.ARC_SAS1NO, ATS_ARACLAR.ARC_TEL
FROM            bayifirma INNER JOIN
                         ATS_ARACLAR ON bayifirma.serino = CONVERT(VARCHAR, ATS_ARACLAR.ARC_SER1NO)
WHERE        (bayifirma.bayia = @kulAd)
ORDER BY bayifirma.firma</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox7.Value" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADZUlEQVRYR8WWTUhUURTHX/Yh
        WdIqISikjTaQBEITFkSL2rQq8HO2tRTatGghJBRBtWnRqmVtgmAiigEHmcQKIlyFNH6M4qizCcePUUdn
        FE73d3lX3jzvDKOTeuGPd9655///33POvNEREecgcaDiXLwiA8FgUBQ2K6ngrg0g3tbWplGJiV0ZQNCI
        FzMR73bEi2JV2rEBr3goFJLOzk5rJX7fdyT/9pgG+/9iwC+eSCQE+EzkEBsKOZK+d1SDfcUGvOJdXV0y
        MTEhyWRSg70x0draykzkftxxJHW3WoN9RQZs4qlUSpaWljTY+020BC9L8laNRuxmBQaKiWcyGcnn8xrs
        bSauKhOJK7USadmlAUppppyy0+/Z2Vl961wuJxsbGxrseUbMXwlMfGzahQHE6ScGjPjMzIwsLi7K+vr6
        1u1NFXhGjDPewYSDduxoBrziDBeEpcTLMQGnzcS294BffHx8XKanp2VhYUHW1tZ0uUuBM5wlh1zftyPr
        N1FgwC8+Njamiebn5yWbzerSlwPOkkMuHKVMbBlQ4lnTcxJs4jSynIXJck1oAzZxXjDpdFpWV1d16VmU
        FmPMxOTkZAF4RowzLHLIhQMuYu3t7Xqo3ZeVboc2YG7e0dEhIyMjOmFubk5WVlb0TQBrdHRUbryMlARn
        WCYPDrjghNtrYssAG+VsMxKJ6L75xY0Bhur68y/y+k/GCmKc8Rog12sCDbTMMBYMYTQa1SVbXl7W5fMC
        UsivPfssvUNpK4gZA/58OBnMvr6+gndCgYGBgQEtimM/yKKPLU8+Sc/Pv1YQ4wzLxgE3Gub2BS3gw+Dg
        oO5dKQPB3rA09n6zglgpA3CjUdQA7jhEufwwQ9jc80GaX/2yQ8XMENo44N5WAcezYrGYbgG/bn4YA5ce
        vZemF9+tIGYM2DjgRsOrafaH1OZwf39/SQPxeFwuPnwngadfrSDGGVYxA2igpYCmXmyOKJxgQum/+UfD
        +xfS4eFhaex+Iw2Po1YQ4wzLxgE3Gmi5mtoEbnhwNhwOy9TUlBWQknz69oOScL9mRXnQQMvVRNupVqgj
        sF/LNVHnajsn1aaeh7y/9wOugXqli7ZTq3AuEAjIfgJNV1u34JTCGYXzCg0KF/YIcKOBFppoO1XuRPLh
        uELNHgMNtPjmVf0DG1ISxWDRou0AAAAASUVORK5CYII=
</value>
  </data>
</root>